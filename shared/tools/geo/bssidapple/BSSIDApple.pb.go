// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: BSSIDApple.proto

package bssidapple

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WifiGeo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bssid         string                 `protobuf:"bytes,1,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Location      *WifiGeo_Location      `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGeo) Reset() {
	*x = WifiGeo{}
	mi := &file_BSSIDApple_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGeo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGeo) ProtoMessage() {}

func (x *WifiGeo) ProtoReflect() protoreflect.Message {
	mi := &file_BSSIDApple_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGeo.ProtoReflect.Descriptor instead.
func (*WifiGeo) Descriptor() ([]byte, []int) {
	return file_BSSIDApple_proto_rawDescGZIP(), []int{0}
}

func (x *WifiGeo) GetBssid() string {
	if x != nil {
		return x.Bssid
	}
	return ""
}

func (x *WifiGeo) GetLocation() *WifiGeo_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type BSSIDResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unk1          int64                  `protobuf:"varint,1,opt,name=unk1,proto3" json:"unk1,omitempty"`
	Wifi          []*WifiGeo             `protobuf:"bytes,2,rep,name=wifi,proto3" json:"wifi,omitempty"`
	Unk2          int32                  `protobuf:"varint,3,opt,name=unk2,proto3" json:"unk2,omitempty"`
	Unk3          int32                  `protobuf:"varint,4,opt,name=unk3,proto3" json:"unk3,omitempty"`
	APIName       string                 `protobuf:"bytes,5,opt,name=APIName,proto3" json:"APIName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BSSIDResp) Reset() {
	*x = BSSIDResp{}
	mi := &file_BSSIDApple_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BSSIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BSSIDResp) ProtoMessage() {}

func (x *BSSIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_BSSIDApple_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BSSIDResp.ProtoReflect.Descriptor instead.
func (*BSSIDResp) Descriptor() ([]byte, []int) {
	return file_BSSIDApple_proto_rawDescGZIP(), []int{1}
}

func (x *BSSIDResp) GetUnk1() int64 {
	if x != nil {
		return x.Unk1
	}
	return 0
}

func (x *BSSIDResp) GetWifi() []*WifiGeo {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *BSSIDResp) GetUnk2() int32 {
	if x != nil {
		return x.Unk2
	}
	return 0
}

func (x *BSSIDResp) GetUnk3() int32 {
	if x != nil {
		return x.Unk3
	}
	return 0
}

func (x *BSSIDResp) GetAPIName() string {
	if x != nil {
		return x.APIName
	}
	return ""
}

type WifiGeo_Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lat           int64                  `protobuf:"varint,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon           int64                  `protobuf:"varint,2,opt,name=lon,proto3" json:"lon,omitempty"`
	Unk1          int64                  `protobuf:"varint,3,opt,name=unk1,proto3" json:"unk1,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiGeo_Location) Reset() {
	*x = WifiGeo_Location{}
	mi := &file_BSSIDApple_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiGeo_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGeo_Location) ProtoMessage() {}

func (x *WifiGeo_Location) ProtoReflect() protoreflect.Message {
	mi := &file_BSSIDApple_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGeo_Location.ProtoReflect.Descriptor instead.
func (*WifiGeo_Location) Descriptor() ([]byte, []int) {
	return file_BSSIDApple_proto_rawDescGZIP(), []int{0, 0}
}

func (x *WifiGeo_Location) GetLat() int64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *WifiGeo_Location) GetLon() int64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *WifiGeo_Location) GetUnk1() int64 {
	if x != nil {
		return x.Unk1
	}
	return 0
}

var File_BSSIDApple_proto protoreflect.FileDescriptor

const file_BSSIDApple_proto_rawDesc = "" +
	"\n" +
	"\x10BSSIDApple.proto\x12\n" +
	"bssidapple\"\x9d\x01\n" +
	"\aWifiGeo\x12\x14\n" +
	"\x05bssid\x18\x01 \x01(\tR\x05bssid\x128\n" +
	"\blocation\x18\x02 \x01(\v2\x1c.bssidapple.WifiGeo.LocationR\blocation\x1aB\n" +
	"\bLocation\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x03R\x03lat\x12\x10\n" +
	"\x03lon\x18\x02 \x01(\x03R\x03lon\x12\x12\n" +
	"\x04unk1\x18\x03 \x01(\x03R\x04unk1\"\x8a\x01\n" +
	"\tBSSIDResp\x12\x12\n" +
	"\x04unk1\x18\x01 \x01(\x03R\x04unk1\x12'\n" +
	"\x04wifi\x18\x02 \x03(\v2\x13.bssidapple.WifiGeoR\x04wifi\x12\x12\n" +
	"\x04unk2\x18\x03 \x01(\x05R\x04unk2\x12\x12\n" +
	"\x04unk3\x18\x04 \x01(\x05R\x04unk3\x12\x18\n" +
	"\aAPIName\x18\x05 \x01(\tR\aAPINameB\x0eZ\f./bssidappleb\x06proto3"

var (
	file_BSSIDApple_proto_rawDescOnce sync.Once
	file_BSSIDApple_proto_rawDescData []byte
)

func file_BSSIDApple_proto_rawDescGZIP() []byte {
	file_BSSIDApple_proto_rawDescOnce.Do(func() {
		file_BSSIDApple_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_BSSIDApple_proto_rawDesc), len(file_BSSIDApple_proto_rawDesc)))
	})
	return file_BSSIDApple_proto_rawDescData
}

var file_BSSIDApple_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_BSSIDApple_proto_goTypes = []any{
	(*WifiGeo)(nil),          // 0: bssidapple.WifiGeo
	(*BSSIDResp)(nil),        // 1: bssidapple.BSSIDResp
	(*WifiGeo_Location)(nil), // 2: bssidapple.WifiGeo.Location
}
var file_BSSIDApple_proto_depIdxs = []int32{
	2, // 0: bssidapple.WifiGeo.location:type_name -> bssidapple.WifiGeo.Location
	0, // 1: bssidapple.BSSIDResp.wifi:type_name -> bssidapple.WifiGeo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_BSSIDApple_proto_init() }
func file_BSSIDApple_proto_init() {
	if File_BSSIDApple_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_BSSIDApple_proto_rawDesc), len(file_BSSIDApple_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_BSSIDApple_proto_goTypes,
		DependencyIndexes: file_BSSIDApple_proto_depIdxs,
		MessageInfos:      file_BSSIDApple_proto_msgTypes,
	}.Build()
	File_BSSIDApple_proto = out.File
	file_BSSIDApple_proto_goTypes = nil
	file_BSSIDApple_proto_depIdxs = nil
}
